<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lebaoxun.modules.fastfood.dao.FoodOrderDao">

    <resultMap type="com.lebaoxun.modules.fastfood.entity.FoodOrderEntity" id="foodOrderMap">
        <result property="id" column="id"/>
        <result property="orderNo" column="order_no"/>
        <result property="userId" column="user_id"/>
        <result property="payType" column="pay_type"/>
        <result property="orderStatus" column="order_status"/>
        <result property="orderAmount" column="order_amount"/>
        <result property="redPackedAmount" column="red_packed_amount"/>
        <result property="orderScore" column="order_score"/>
        <result property="payAmount" column="pay_amount"/>
        <result property="buyNumber" column="buy_number"/>
        <result property="macId" column="mac_id"/>
        <result property="activityId" column="activity_id"/>
        <result property="activityType" column="activity_type"/>
        <result property="activityFee" column="activity_fee"/>
        <result property="couponId" column="coupon_id"/>
        <result property="redPackedId" column="red_packed_id"/>
        <result property="source" column="source"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="takeFoodTime" column="take_food_time"/>
        <result property="couponType" column="coupon_type"/>
        <result property="couponFee" column="coupon_fee"/>
        <result property="qrCode" column="qr_code"/>
        <result property="macAddress" column="mac_address"/>
        <result property="macAreaCode" column="mac_area_code"/>
        
        <result property="invoiceFlag" column="invoice_flag"/>
        <result property="invoiceIRD" column="invoice_ird"/>
        <result property="invoiceEamil" column="invoice_eamil"/>
        <result property="invoiceTitle" column="invoice_title"/>
        <result property="warmFlag" column="warm_flag"/>
        
        <collection property="childs" resultMap="foodOrderChildsMap" ofType="com.lebaoxun.modules.fastfood.entity.FoodOrderChildsEntity"></collection>
    </resultMap>
    
    <resultMap type="com.lebaoxun.modules.fastfood.entity.FoodOrderChildsEntity" id="foodOrderChildsMap">
        <result property="id" column="child_order_id"/>
        <result property="orderId" column="order_id"/>
        <result property="productCatId" column="product_cat_id"/>
        <result property="productId" column="product_id"/>
        <result property="price" column="child_price"/>
        <result property="score" column="child_score"/>
        <result property="buyNumber" column="child_buy_number"/>
        <result property="productScore" column="child_product_score"/>
        <result property="productAmount" column="child_product_amount"/>
        <result property="status" column="child_status"/>
        <result property="productName" column="child_product_name"/>
        <result property="productPic" column="child_product_pic"/>
        <result property="activityFee" column="child_activity_fee"/>
        <result property="activityId" column="child_activity_id"/>
        <result property="activity" column="child_activity"/>
        <result property="costPrice" column="cost_price"/>
        <result property="aisleId" column="aisle_id"/>
    </resultMap>
    
    <insert id="insert" parameterType="com.lebaoxun.modules.fastfood.entity.FoodOrderEntity"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO food_order (
        order_no, user_id,pay_type,order_status,
        order_amount, red_packed_amount, order_score, pay_amount, buy_number,
        mac_id, activity_id, activity_type, coupon_id, red_packed_id,
        source, create_time, update_time, take_food_time, coupon_type, coupon_fee, warm_flag) VALUES
        ( #{orderNo}, #{userId}, #{payType}, #{orderStatus},
        #{orderAmount}, #{redPackedAmount}, #{orderScore}, #{payAmount}, #{buyNumber},
        #{macId}, #{activityId}, #{activityType}, #{couponId}, #{redPackedId},
        #{source}, #{createTime}, #{updateTime}, #{takeFoodTime} ,#{couponType}, #{couponFee}, #{warmFlag}]);
    </insert>
    
    <resultMap type="java.util.Map" id="foodMacOrderMap">
        <result property="orderAmount" column="orderAmount"/>
        <result property="redPackedAmount" column="redPackedAmount"/>
        <result property="orderScore" column="orderScore"/>
        <result property="payAmount" column="payAmount"/>
        <result property="couponFee" column="couponFee"/>
        <result property="buyNumber" column="buyNumber"/>
        <result property="orderTime" column="orderTime"/>
        <result property="takeFoodTime" column="takeFoodTime"/>
        <result property="orderStatus" column="orderStatus"/>
        <result property="warmFlag" column="warmFlag"/>
        <collection property="childs" resultMap="foodMacOrderChildsMap" ofType="java.util.Map" javaType="java.util.ArrayList"></collection>
    </resultMap>
    
    <resultMap type="java.util.Map" id="foodMacOrderChildsMap">
    	<result property="productId" column="productId"/>
        <result property="buyNumber" column="childBuyNumber"/>
        <result property="price" column="price"/>
        <result property="costPrice" column="costPrice"/>
        <result property="productName" column="productName"/>
        <result property="productPic" column="productPic"/>
        <result property="x" column="x"/>
        <result property="y" column="y"/>
        <result property="warmFlag" column="warmFlag"/>
        <result property="warmTime" column="warmTime"/>
        <result property="type" column="type"/>
    </resultMap>

    <!--扫码查询订单信息-->
    <select  id="getSweeptCodeOrderInfo" resultMap="foodMacOrderMap" >
        SELECT
            order_t.order_amount AS orderAmount,
            order_t.order_no AS orderNo,
			order_t.red_packed_amount AS redPackedAmount,
			order_t.order_score AS orderScore,
			order_t.pay_amount AS payAmount,
			order_t.coupon_fee AS couponFee,
			order_t.buy_number AS buyNumber,
			order_t.create_time AS orderTime,
			order_t.take_food_time as takeFoodTime,
			order_t.order_status as orderStatus,
			order_t.warm_flag as warmFlag,
			child.product_id as productId,
	      	child.buy_number as childBuyNumber,
	      	child.price as price,
		  	child.cost_price as costPrice,
	      	child.product_name as productName,
	      	child.product_pic as productPic,
			aisle.x,
	     	aisle.y,
	     	product.warm_flag as warmFlag,
	     	product.warm_time as warmTime,
	     	product.type
        FROM
            food_order order_t
        LEFT JOIN food_order_childs as child ON child.order_id = order_t.id
	    LEFT JOIN food_machine_aisle as aisle on aisle.id = child.aisle_id
	    LEFT JOIN food_product as product on product.id = aisle.product_id
        where order_t.order_no=#{orderNo}
    </select>
    
    <select id="findOrderInfoByMacIMEI" resultMap="foodMacOrderMap">
        SELECT
	      	order_t.order_amount AS orderAmount,
	      	order_t.order_no AS orderNo,
			order_t.red_packed_amount AS redPackedAmount,
			order_t.order_score AS orderScore,
			order_t.pay_amount AS payAmount,
			order_t.coupon_fee AS couponFee,
			order_t.buy_number AS buyNumber,
			order_t.create_time AS orderTime,
			order_t.take_food_time as takeFoodTime,
			order_t.warm_flag as warmFlag,
	      	child.buy_number as childBuyNumber,
	      	child.price as price,
		  	child.cost_price as costPrice,
	      	child.product_name as productName,
	      	child.product_pic as productPic,
			aisle.x,
	     	aisle.y,
	     	product.warm_flag as warmFlag,
	     	product.warm_time as warmTime,
	     	product.type
		FROM
			food_order order_t
		LEFT JOIN food_order_childs as child ON child.order_id = order_t.id
	    LEFT JOIN food_machine_aisle as aisle on aisle.id = child.aisle_id
	    LEFT JOIN food_product as product on product.id = aisle.product_id
		where 
		order_t.order_status = 1
		and order_t.mac_id= (select id from food_machine where IMEI = #{imei})
    </select>
    
    <select id="findOrderByUser" resultMap="foodOrderMap" >
		select t1.*,
			t2.id as child_order_id,t2.status as child_status,
			t2.product_cat_id,t2.product_id,t2.price as child_price,
			t2.score as child_score,t2.buy_number as child_buy_number,
			t2.product_score as child_product_score, t2.product_amount as child_product_amount,
			t2.product_name as child_product_name, t2.product_pic as child_product_pic,
			t2.activity_fee as child_activity_fee, t2.activity_id as child_activity_id,
			t2.activity as child_activity, t2.price as cost_price,
			t2.aisle_id as aisle_id
			from food_order as t1
		left join food_order_childs as t2 on t2.order_id = t1.id
		where t1.user_id = #{userId}
		<if test="status != null">
		 and t1.order_status in
		 <foreach collection="status" index="index" open="(" separator="," close=")" item="item">
		     #{item}
		 </foreach>
		</if>
		order by t1.create_time desc
		<if test="size != null">
			limit
			<if test="offset != null">
				#{offset,jdbcType=INTEGER},
			</if>
			#{size,jdbcType=INTEGER}
		</if>
    </select>
    
    <select id="findOrderInfoByUser" resultMap="foodOrderMap">
        select 
        	t1.*,
        	mac.address as mac_address, mac.area_code as mac_area_code,
			t2.id as child_order_id,t2.status as child_status,
			t2.product_cat_id,t2.product_id,t2.price as child_price,
			t2.score as child_score,t2.buy_number as child_buy_number,
			t2.product_score as child_product_score, t2.product_amount as child_product_amount,
			t2.product_name as child_product_name, t2.product_pic as child_product_pic,
			t2.activity_fee as child_activity_fee, t2.activity_id as child_activity_id,
			t2.activity as child_activity, t2.price as cost_price,
			t2.aisle_id as aisle_id
        from food_order as t1
		left join food_order_childs as t2 on t2.order_id = t1.id
		left join food_machine as mac on mac.id = t1.mac_id
		where order_no = #{orderNo} 
		<if test="userId != null">
			and t1.user_id = #{userId}
		</if>
    </select>
    
    <update id="closeOrderByNopayAndTimeout">
        update food_order set order_status=-1 where order_status = 0 and NOW() > DATE_ADD(create_time,INTERVAL #{timeOut} DAY_MINUTE);
    </update>
</mapper>